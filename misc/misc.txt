http://onjava.com/pub/a/onjava/2006/05/31/working-with-google-web-toolkit.html?page=2

===============
I tried this and successful in receiving file.
My file type is ".txt".

//----------------------------------------

//Write A servlet class extending HttpServerlet

inside doGet method write this.

resp.setContentType("application/csv");
resp.setHeader("Content-disposition", "attachment; filename=" +
"Report.txt");

ServletOutputStream outputStream = resp.getOutputStream();

for (int i = 0; i < buff.length(); ++i) {
outputStream.write(buff.charAt(i));
}
outputStream.close();



At client side:---

String baseURL = GWT.getModuleBaseURL();
String url = baseURL + "/VersionDetailServlet.do";
Window.open(url, "",
"menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=no,toolbar=true,
width=" + Window.getClientWidth() + ",height=" + Window.getClientHeight());

It will prompt a dialog to save file.

==============

// http://groups.google.com/group/Google-Web-Toolkit/browse_thread/thread/11b749d50221499e
    ./appcfg.py vacuum_indexes ~/workspaces/ws0/Start-List-RC1/


==============

import java.net.*;
import java.io.*;

public class URLReader {
public static void main(String[] ar) throws Exception {

URL yahoo = new URL("http://finance.yahoo.com");
BufferedReader in = new BufferedReader(new InputStreamReader(yahoo.openStream()));
BufferedWriter wr=new BufferedWriter(new FileWriter("sample.txt"));

String inputLine;
while ((inputLine = in.readLine()) != null)
// System.out.println(inputLine);
try
{
wr.write(inputLine);
}catch(Exception e)
{
e.printStackTrace();
}
in.close();
}
}

===================
Parse URL query
    
public static Map<String, String> getQueryMap(String query)
{
    String[] params = query.split("&");
    Map<String, String> map = new HashMap<String, String>();
    for (String param : params)
    {
        String name = param.split("=")[0];
        String value = param.split("=")[1];
        map.put(name, value);
    }
    return map;
}

    
String query = url.getQuery();
Map<String, String> map = getQueryMap(query);
Set<String> keys = map.keySet();
for (String key : keys)
{
   System.out.println("Name=" + key);
   System.out.println("Value=" + map.get(key));
}

===================
Download/upload data
C:\google_appengine\bulkloader.py --dump --app_id=start-list --url=http://start-list.appspot.com/remote_api --filename=start-list.data
~/google_appengine/bulkloader.py --dump --app_id=start-list --url=http://start-list.appspot.com/remote_api --filename=start-list.data

C:\google_appengine\bulkloader.py --restore --app_id=start-list --url=http://start-list.appspot.com/remote_api --filename=start-list.data
C:\google_appengine\bulkloader.py --restore --app_id=start-list --url=http://127.0.0.1:8888/remote_api --filename=start-list.data
~/google_appengine/bulkloader.py --restore --app_id=start-list --url=http://127.0.0.1:8888/remote_api --filename=start-list.data


===================
Local Datastore Viewer
http://localhost:8888/_ah/admin

===================
Application Stats for start-list
http://start-list.appspot.com/appstats/stats

===================
Eclipse Plugin AppWrench
http://appwrench.onpositive.com/static/updatesite

===================
Errors after updating to 1.3.2
https://groups.google.com/group/google-appengine-java/browse_thread/thread/3a22c1dc376bdc19


====================
Load progress status
http://www.ajaxload.info/
http://groups.google.com/group/google-web-toolkit/browse_thread/thread/e315c7532c2ff111/4767d65461deb9fd?lnk=gst&q=progress+bar#4767d65461deb9fd

====================
CubicTest - http://boss.bekk.no/cubictest/update/

====================
Delete index
make sure app.yaml is there an correct!
http://groups.google.com/group/google-appengine-java/browse_thread/thread/c8a7888438efeb9/cdbaeb27befcfd75
~/google_appengine/appcfg.py vacuum_indexes ~/workspaces/ws6/start-list


====================
Start cron job in devel mode:
curl http://localhost:8888/cronjobs
curl http://localhost:8888/cronjobs?now=26.02.2011%2023:00%20utc


=====================
Caution: Cron requests are always sent to the default version of the application.

====================
If a the application is deployed the first time, it may not work immediately. Wait
until the datastore indexes are build. This may take some time, be patient!
(com.google.appengine.api.datastore.DatastoreNeedIndexException: The index for this query is not ready to serve. See the Datastore Indexes page )

=====================
Drag and Drop, for scheduler UI?
http://code.google.com/p/gwt-dnd/

=====================
Performace test with Jmeter
~/jakarta-jmeter-2.4/bin/jmeter

===============================================================================================================
Save / Load webpage from file
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;

import javax.swing.text.html.parser.DTD;

public class MainClass {

  public static void main(String[] args) {

    try {
      URL u = new URL("http://www.java2s.com");
      OutputStream out = new FileOutputStream("test.htm");
      InputStream in = u.openStream();
      DTD html = DTD.getDTD("html");
      System.out.println(html.getName());
      in.close();
      out.flush();
      out.close();
    } catch (Exception e) {
      System.err.println("Usage: java PageSaver url local_file");
    }

  }

}
-----
===============================================================================================================
For OLC-Import testing: mini webserver, simple lib/simple-4.1.21.jar


import java.io.IOException;
import java.io.PrintStream;
import java.net.InetSocketAddress;
import java.net.SocketAddress;

import org.simpleframework.http.Request;
import org.simpleframework.http.Response;
import org.simpleframework.http.core.Container;
import org.simpleframework.transport.connect.Connection;
import org.simpleframework.transport.connect.SocketConnection;

public class HelloWorld implements Container {

	public void handle(Request request, Response response) {
		PrintStream body = null;
		try {
			String path = request.getPath().getName();
			String sp = request.getParameter("sp");
			body = response.getPrintStream();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		long time = System.currentTimeMillis();

		response.set("Content-Type", "text/plain");
		response.set("Server", "HelloWorld/1.0 (Simple 4.0)");
		response.setDate("Date", time);
		response.setDate("Last-Modified", time);

		body.println("Hello World XX");
		body.close();
	}

	public static void main(String[] list) throws Exception {
		Container container = new HelloWorld();
		Connection connection = new SocketConnection(container);
		SocketAddress address = new InetSocketAddress(8081);

		connection.connect(address);
	}
}

===============================================================================================================
Refactoring PeriodicJob, SendExcel and ImportOLC using polymorphic:
http://groups.google.com/group/objectify-appengine/msg/d26b40c7a8b1a89a

===============================================================================================================
JUnit test wit real data:
http://code.google.com/appengine/forum/java-forum.html?place=topic%2Fgoogle-appengine-java%2F_1_8ChqYnww%2Fdiscussion
http://stackoverflow.com/questions/4767918/acceptance-testing-preloading-of-data-into-gae-dev-server-datastore

===============================================================================================================
Add new service:
http://www.giantflyingsaucer.com/blog/?p=1017

===============================================================================================================
Web-Page Testing, HtmlUnit 
http://htmlunit.sourceforge.net/gettingStarted.html


===============================================================================================================
Retrieves log data for the application running on App Engine
appcfg.py  --num_days=20 --severity=0 request_logs  /Users/Andreas/git/start-list/   start-list-log