http://onjava.com/pub/a/onjava/2006/05/31/working-with-google-web-toolkit.html?page=2

===============
I tried this and successful in receiving file.
My file type is ".txt".

//----------------------------------------

//Write A servlet class extending HttpServerlet

inside doGet method write this.

resp.setContentType("application/csv");
resp.setHeader("Content-disposition", "attachment; filename=" +
"Report.txt");

ServletOutputStream outputStream = resp.getOutputStream();

for (int i = 0; i < buff.length(); ++i) {
outputStream.write(buff.charAt(i));
}
outputStream.close();



At client side:---

String baseURL = GWT.getModuleBaseURL();
String url = baseURL + "/VersionDetailServlet.do";
Window.open(url, "",
"menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=no,toolbar=true,
width=" + Window.getClientWidth() + ",height=" + Window.getClientHeight());

It will prompt a dialog to save file.

==============

// http://groups.google.com/group/Google-Web-Toolkit/browse_thread/thread/11b749d50221499e
    ./appcfg.py vacuum_indexes ~/workspaces/ws0/Start-List-RC1/


==============

import java.net.*;
import java.io.*;

public class URLReader {
public static void main(String[] ar) throws Exception {

URL yahoo = new URL("http://finance.yahoo.com");
BufferedReader in = new BufferedReader(new InputStreamReader(yahoo.openStream()));
BufferedWriter wr=new BufferedWriter(new FileWriter("sample.txt"));

String inputLine;
while ((inputLine = in.readLine()) != null)
// System.out.println(inputLine);
try
{
wr.write(inputLine);
}catch(Exception e)
{
e.printStackTrace();
}
in.close();
}
}

===================
Parse URL query
    
public static Map<String, String> getQueryMap(String query)
{
    String[] params = query.split("&");
    Map<String, String> map = new HashMap<String, String>();
    for (String param : params)
    {
        String name = param.split("=")[0];
        String value = param.split("=")[1];
        map.put(name, value);
    }
    return map;
}

    
String query = url.getQuery();
Map<String, String> map = getQueryMap(query);
Set<String> keys = map.keySet();
for (String key : keys)
{
   System.out.println("Name=" + key);
   System.out.println("Value=" + map.get(key));
}

===================
Download/upload data
C:\google_appengine\bulkloader.py --dump --app_id=start-list --url=http://start-list.appspot.com/remote_api --filename=start-list.data
~/google_appengine/bulkloader.py --dump --app_id=start-list --url=http://start-list.appspot.com/remote_api --filename=start-list.data

C:\google_appengine\bulkloader.py --restore --app_id=start-list --url=http://start-list.appspot.com/remote_api --filename=start-list.data
C:\google_appengine\bulkloader.py --restore --app_id=start-list --url=http://127.0.0.1:8888/remote_api --filename=start-list.data
~/google_appengine/bulkloader.py --restore --app_id=start-list --url=http://127.0.0.1:8888/remote_api --filename=start-list.data


===================
Local Datastore Viewer
http://localhost:8888/_ah/admin

===================
Application Stats for start-list
http://start-list.appspot.com/appstats/stats

===================
Eclipse Plugin AppWrench
http://appwrench.onpositive.com/static/updatesite

===================
Errors after updating to 1.3.2
https://groups.google.com/group/google-appengine-java/browse_thread/thread/3a22c1dc376bdc19


====================
Load progress status
http://www.ajaxload.info/
http://groups.google.com/group/google-web-toolkit/browse_thread/thread/e315c7532c2ff111/4767d65461deb9fd?lnk=gst&q=progress+bar#4767d65461deb9fd

====================
CubicTest - http://boss.bekk.no/cubictest/update/

====================
Delete index
make sure app.yaml ist there an correct!
http://groups.google.com/group/google-appengine-java/browse_thread/thread/c8a7888438efeb9/cdbaeb27befcfd75
~/google_appengine/appcfg.py vacuum_indexes ~/workspaces/ws3/start-list


====================
Start cron job in devel mode:
curl http://localhost:8888/cronjobs
curl http://localhost:8888/cronjobs?now=26.02.2011%2023:00%20utc


=====================
Caution: Cron requests are always sent to the default version of the application.

====================
If a the application is deployed the first time, it may not work immediately. Wait
until the datastore indexes are build. This may take some time, be patient!
(com.google.appengine.api.datastore.DatastoreNeedIndexException: The index for this query is not ready to serve. See the Datastore Indexes page )

=====================
Drag and Drop, for scheduler UI?
http://code.google.com/p/gwt-dnd/

=====================
Performace test with Jmeter
~/jakarta-jmeter-2.4/bin/jmeter

=====================
Save / Load webpage from file
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;

import javax.swing.text.html.parser.DTD;

public class MainClass {

  public static void main(String[] args) {

    try {
      URL u = new URL("http://www.java2s.com");
      OutputStream out = new FileOutputStream("test.htm");
      InputStream in = u.openStream();
      DTD html = DTD.getDTD("html");
      System.out.println(html.getName());
      in.close();
      out.flush();
      out.close();
    } catch (Exception e) {
      System.err.println("Usage: java PageSaver url local_file");
    }

  }

}
--
mport java.io.FileOutputStream;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.SocketAddress;
import java.net.URL;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.channels.SocketChannel;

public class MainClass {

  public static void main(String[] args) throws IOException {

    URL u = new URL("http://www.java2s.com");
    String host = u.getHost();
    int port = 80;
    String file = "/";

    SocketAddress remote = new InetSocketAddress(host, port);
    SocketChannel channel = SocketChannel.open(remote);
    FileOutputStream out = new FileOutputStream("yourfile.htm");
    FileChannel localFile = out.getChannel();

    String request = "GET " + file + " HTTP/1.1\r\n" + "User-Agent: HTTPGrab\r\n"
        + "Accept: text/*\r\n" + "Connection: close\r\n" + "Host: " + host + "\r\n" + "\r\n";

    ByteBuffer header = ByteBuffer.wrap(request.getBytes("US-ASCII"));
    channel.write(header);

    ByteBuffer buffer = ByteBuffer.allocate(8192);
    while (channel.read(buffer) != -1) {
      buffer.flip();
      localFile.write(buffer);
      buffer.clear();
    }

    localFile.close();
    channel.close();
  }
}

=====================
Refactoring PeriodicJob, SendExcel and ImportANCE using polymorphic:
http://groups.google.com/group/objectify-appengine/msg/d26b40c7a8b1a89a


